worker_processes 1;

events {
    worker_connections 1024;
}

http {
    # กำหนด upstream สำหรับ backend service
    # 'backend' คือชื่อ service ใน docker-compose.yml
    # 3000 คือ port ที่ NestJS app เปิดรอภายใน container
    upstream backend_service {
        server backend:3000;
    }

    # กำหนด upstream สำหรับ frontend service
    # 'frontend' คือชื่อ service ใน docker-compose.yml
    # 3000 คือ port ที่ React dev server เปิดรอภายใน container
    upstream frontend_service {
        server frontend:3000;
    }

    server {
        listen 80;

        # ถ้า request มาที่ /api ให้ส่งต่อไปยัง Backend
        location /api {
            proxy_pass http://backend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # request อื่นๆ ทั้งหมด ให้ส่งต่อไปยัง Frontend
        location / {
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # สำหรับรองรับ WebSocket ของ React Dev Server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}